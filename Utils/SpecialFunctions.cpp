#include "SpecialFunctions.h"

//NR, third edition
double pLegendre(const Int l, const Int m, const double x) {
	//Computes the renormalized associated Legendre polynomial
	//sqrt( (2l+1)/(4*pi) (l-m)!/(l+m)! ) P_l^m(x) = Y_{lm}(theta, 0), x = cos(theta).
	//Here m and l are integers satisfying 0 <= m <= l, while x lies in the range -1 <= x <= 1
	//P_l^m(x) is defined as in DLMF NIST, Varshalovich
	//BUT (-1)^m P_l^m(x) wrt P_l^m defined in Messiah, Biedenharn & Louck
	Int i, ll;
	double fact, oldfact, pll, pmm, pmmp1, omx2;
	assert( m >= 0 && l >= m && abs(x) <= 1.0 );
	//Compute P_m^m
	pmm = 1.0;
	if (m > 0) {
		omx2 = (1.0 - x)*(1.0 + x);
		fact = 1.0;
		for (i = 1; i <= m; i++) {
			pmm *= omx2 * fact / (fact + 1.0);
			fact += 2.0;
		}
	}
	pmm = sqrt( (2*m+1)*pmm/(4.0*PI) );
	if (m & 1)
		pmm = -pmm;
	if (l == m)
		return pmm;
	else { //Compute P_{m+1}^m
		pmmp1 = x * sqrt(2.0*m + 3.0)*pmm;
		if (l == m + 1)
			return pmmp1;
		else { //Compute P_l^m, l > m+1
			oldfact = sqrt(2.0*m + 3.0);
			for (ll = m + 2; ll <= l; ll++) {
				fact = sqrt( (4.0*ll*ll-1.0)/(ll*ll-m*m) );
				pll = (x*pmmp1 - pmm / oldfact)*fact;
				oldfact = fact;
				pmm = pmmp1;
				pmmp1 = pll;
			}
			return pll;
		}
	}
}

//Non-normalized Legendre polynomials
double pLegendre(const Int l, const double x) {
	assert(l <= 100);
	double pl, plm1, plm2;
	plm2 = 0.0; plm1 = 1.0;
	for (Int il = 1; il <= l; il++) {
		pl = ( (2*il-1)*x*plm1 - (il-1)*plm2 ) / il;
		plm2 = plm1; plm1 = pl;
	}
	return plm1;
}

double dpLegendre(const Int l, const double x) {
	assert(l <= 100);
	double pl, plm1, plm2;
	double dpl, dplm1, dplm2;
	plm2 = 0.0; plm1 = 1.0;
	dplm2 = 0.0; dplm1 = 0.0;
	for (Int il = 1; il <= l; il++) {
		dpl = ( (2*il-1)*(x*dplm1+plm1) - (il-1)*dplm2 ) / il;
		dplm2 = dplm1; dplm1 = dpl;
		pl = ((2 * il - 1)*x*plm1 - (il - 1)*plm2) / il;
		plm2 = plm1; plm1 = pl;
	}
	return dplm1;
}

double ddpLegendre(const Int l, const double x) {
	assert(l <= 100);
	double pl, plm1, plm2;
	double dpl, dplm1, dplm2;
	double ddpl, ddplm1, ddplm2;
	plm2 = 0.0; plm1 = 1.0;
	dplm2 = 0.0; dplm1 = 0.0;
	ddplm2 = 0.0; ddplm1 = 0.0;
	for (Int il = 1; il <= l; il++) {
		ddpl = ( (2*il - 1)*(2.0*dplm1+x*ddplm1) - (il-1)*ddplm2 ) / il;
		ddplm2 = ddplm1; ddplm1 = ddpl;
		dpl = ((2 * il - 1)*(x*dplm1 + plm1) - (il - 1)*dplm2) / il;
		dplm2 = dplm1; dplm1 = dpl;
		pl = ((2 * il - 1)*x*plm1 - (il - 1)*plm2) / il;
		plm2 = plm1; plm1 = pl;
	}
	return ddplm1;
}

void pLegendre(const Int l, const double x, std::vector<double> &vals) {
	assert(l <= 100);
	vals.resize(l+1);

	vals[0] = 1.0;
	double pl, plm1, plm2;
	plm2 = 0.0; plm1 = 1.0;
	for (Int il = 1; il <= l; il++) {
		pl = ((2 * il - 1)*x*plm1 - (il - 1)*plm2) / il;
		plm2 = plm1; plm1 = pl;
		vals[il] = plm1;
	}
}

void dpLegendre(const Int l, const double x, std::vector<double> &vals) {
	assert(l <= 100);
	vals.resize(l + 1);

	vals[0] = 0.0;
	double pl, plm1, plm2;
	double dpl, dplm1, dplm2;
	plm2 = 0.0; plm1 = 1.0;
	dplm2 = 0.0; dplm1 = 0.0;
	for (Int il = 1; il <= l; il++) {
		dpl = ((2 * il - 1)*(x*dplm1 + plm1) - (il - 1)*dplm2) / il;
		dplm2 = dplm1; dplm1 = dpl;
		pl = ((2 * il - 1)*x*plm1 - (il - 1)*plm2) / il;
		plm2 = plm1; plm1 = pl;
		vals[il] = dplm1;
	}
}

void ddpLegendre(const Int l, const double x, std::vector<double> &vals) {
	assert(l <= 100);
	vals.resize(l + 1);

	vals[0] = 0.0;
	double pl, plm1, plm2;
	double dpl, dplm1, dplm2;
	double ddpl, ddplm1, ddplm2;
	plm2 = 0.0; plm1 = 1.0;
	dplm2 = 0.0; dplm1 = 0.0;
	ddplm2 = 0.0; ddplm1 = 0.0;
	for (Int il = 1; il <= l; il++) {
		ddpl = ((2 * il - 1)*(2.0*dplm1 + x * ddplm1) - (il - 1)*ddplm2) / il;
		ddplm2 = ddplm1; ddplm1 = ddpl;
		dpl = ((2 * il - 1)*(x*dplm1 + plm1) - (il - 1)*dplm2) / il;
		dplm2 = dplm1; dplm1 = dpl;
		pl = ((2 * il - 1)*x*plm1 - (il - 1)*plm2) / il;
		plm2 = plm1; plm1 = pl;
		vals[il] = ddplm1;
	}
}

//NR, third edition
void gauleg(const double x1, const double x2, \
	vector<double> &x, vector<double> &w) {
/*Given the lower and upper limits
of Integration x1 and x2, this routine returns arrays
x[0..n-1] and w[0..n-1] of length n, containing the
abscissas and weights of the Gauss-Legendre n-poInt
quadrature formula */
	const double EPS = 1.0e-14; //EPS is the relative precision
	double z1, z, xm, xl, pp, p3, p2, p1;
	Int n = x.size();
	Int m = (n+1)/2; //The roots are symmetric in the Interval,
					//so we only have to find half of them
	xm = 0.5*(x2+x1);
	xl = 0.5*(x2-x1);
	for (Int i = 0; i < m; i++) { //Loop over the desired roots
		z = cos( PI * (i+0.75) / (n+0.5) );
//Starting with this approximation for the i'th root,
//we enter the main loop of refinement by Newton's method
		do {
			p1 = 1.0; p2 = 0.0;
			for (Int j = 0; j < n; j++) { //Loop up the recurrence relation
							//to get the Legendre polynomial evaluated at z
				p3 = p2;
				p2 = p1;
				p1 = ( (2.0*j+1.0)*z*p2 - j*p3 )/(j+1);
			}
/* p1 is now the desired Legendre polynomial.
We next compute pp, its derivative,
by a standard relation involving also p2,
the polynomial of one lower order.
*/
			pp = n*(z*p1-p2)/(z*z-1.0);
			z1 = z;
			z = z1 - p1/pp; //Newton's method
		} while ( abs(z-z1) > EPS );
		x[i] = xm - xl*z;
		x[n-1-i] = xm + xl*z;
/* Scale the root to the desired Interval,
and put in its symmetric counterpart.
*/
		w[i] = 2.0*xl / ( (1-z*z)*pp*pp );
		w[n-1-i] = w[i];
// Compute the weight and its symmetric counterpart
	}
}

Complex wignerD(const Int j, const Int m, const Int mbar, \
	const double alpha, const double beta, const double gamma) {
	return exp(-zi * (double)m*alpha)*wignerDSmall(j, m, mbar, beta)*exp(-zi * (double)mbar*gamma);
}

//Translated from Fortran 77 code
//W.J. Braithwaite, J.G. Cramer CPC 3, 318 (1972)
double wignerDSmall(const Int j, const Int m, const Int mbar, \
	const double beta) {
	//Wigner small d function d^j_{m m'}(x)
	//beta is in radian

	auto lnfac = [](const Int n) -> double {
		double fac;
		double fn;
		static Int im = 0;
		static double fac1[151];

		if (n < 0)
			return 0.0;
		if (n > 150) {
			fn = n + 1.0;
			fac = 1.0 / (fn*fn);
			fac = 0.918938533195 - fn + (fn - 0.5)*log(fn) + (0.0833333333333 - fac * (\
				0.00277777777777 - fac * (0.000793650793651 - 0.000595238095236*fac))) / fn;
		}
		else {
			if (im != 150) {
				im = 150;
				fac1[0] = 0.0;
				for (Int i = 0; i < im; i++)
					fac1[i + 1] = fac1[i] + log(i + 1.0);
			}
			fac = fac1[n];
		}

		return fac;
	};

	double ds, arg, s, c, f0, p;
	Int k1, k2, k3, k4;
	Int k5, k6, k7, k8, k9;
	Int kmin, kmax;

	ds = 0.0;
	k1 = j - mbar;
	k2 = j + mbar;
	k3 = j - m;
	k4 = j + m;

	assert(min({ k1, k2, k3, k4 }) >= 0);
	//assert(min( min( min(k1, k2), k3 ), k4 ) >= 0);

	arg = 0.5*beta;
	s = sin(arg);
	c = cos(arg);
	k5 = k2 - k3;
	kmax = min(k1, k3);
	kmin = max((Int)0, -k5);
	//kmin = max(0, -(M+M')) - error in article!

//     SPECIAL CASE ROTATIONS.
	if (c == 0.0) {
		kmin = 0;
		c = 1.0;
		if (k5 != 0)
			return ds;
		kmax = kmin;
	}
	else {
		if (s == 0) {
			kmin = k1;
			s = 1.0;
			if (k2 - k4 != 0)
				return ds;
			kmax = kmin;
		}
	}

	k5 += kmin;
	k6 = k1 - kmin;
	k7 = k3 - kmin;
	k8 = k5 + kmin;
	k9 = k1 + k2 - k8;
	ds = pow(-1.0, k3 - kmin)*pow(c, k8)*pow(s, k9)*exp(0.5*(lnfac(k1) + lnfac(k2) \
		+ lnfac(k3) + lnfac(k4)) - (lnfac(k5) + lnfac(k6) + lnfac(k7) + lnfac(kmin)));
	Int i, j_;
	if (kmin < kmax) {
		f0 = pow(c / s, 2.0);
		p = 1.0;
		for (Int k = 1; k <= kmax; k++) {
			//in fact, can be started with k = kmin+1
			i = k - kmax;
			j_ = 1 - i;
			p = 1.0 - p * f0*((double)(k6 + i)*(k7 + i)) / ((double)(k5 + j_)*(kmin + j_));
		}
		ds *= p;
	}

	return pow(-1.0, m - mbar)*ds;
}

/*
void pLegZeros(const Int m, const Int l, vector<double> &zeros) {
	assert(l >= m);
	zeros.resize(l - m);
	vector<double> tmp;
	switch (m) {
	case 0:
		tmp.resize(l);
		gauleg(-1.0, 1.0, zeros, tmp);
		break;
	case 1:
		if (l - m == 3)
			zeros = { -0.65465367070798, 0, 0.65465367070798 };
		else if (l - m == 6)
			zeros = { -0.87174014850961, -0.59170018143314, -0.209299217902479, \
				0.209299217902479, 0.59170018143314, 0.87174014850959 };
		else if (l - m == 9)
			zeros = { -0.93400143040806, -0.78448347366314, -0.56523532699621, \
				- 0.295758135586939, 0, 0.295758135586939, 0.56523532699621, \
				0.78448347366314, 0.93400143040806 };
		else if (l - m == 12)
			zeros = { -0.95993504526726, -0.86780105383035, -0.72886859909133, \
				- 0.55063940292865, -0.34272401334271, -0.116331868883704, \
				0.116331868883704, 0.34272401334271, 0.55063940292865, \
				0.72886859909133, 0.86780105383035, 0.95993504526726 };
		else if (l - m == 15)
			zeros = { -0.97313217663142, -0.91087999591557, -0.81569625122177, \
				- 0.69102898062768, -0.54138539933010, -0.37217443356548, \
				- 0.189511973518317, 0, 0.189511973518317, 0.37217443356547, \
				0.54138539933010, 0.69102898062768, 0.81569625122177, \
				0.91087999591557, 0.97313217663142 };
		else if (l - m == 18)
			zeros = { -0.98074370489391, -0.93593449881266, -0.86687797808995, \
				- 0.77536826095206, -0.66377640229031, -0.53499286403189, \
				- 0.39235318371391, -0.239551705922986, -0.080545937238822, \
				0.080545937238822, 0.239551705922986, 0.39235318371391, \
				0.53499286403189, 0.66377640229031, 0.77536826095206, \
				0.86687797808995, 0.93593449881266, 0.98074370489391 };
		else if (l - m == 21)
			zeros = { -0.98552715587873, -0.95175795571071, -0.89945855804034, \
				- 0.82965109665129, -0.74369504117206, -0.64326364446014, \
				- 0.53031177113685, -0.40703793791447, -0.275841548945793, \
				- 0.139276204040668, 0, 0.139276204040668, 0.275841548945793, \
				0.40703793791447, 0.53031177113684, 0.64326364446014, \
				0.74369504117206, 0.82965109665129, 0.89945855804034, \
				0.95175795571071, 0.98552715587873 };
		else if (l - m == 24)
			zeros = { -0.98872741231141, -0.96237787476764, -0.92143554681754, \
				- 0.86652432395912, -0.79847718310743, -0.71832581636267, \
				- 0.62728529949231, -0.52673574202988, -0.41820138706625, \
				- 0.303327512859253, -0.183855495270055, -0.061596411781920, \
				0.061596411781920, 0.183855495270055, 0.303327512859253, \
				0.41820138706625, 0.52673574202988, 0.62728529949232, \
				0.71832581636267, 0.79847718310745, 0.86652432395916, \
				0.92143554681764, 0.96237787476785, 0.98872741231174 };
		else if (l - m == 27)
			zeros = { -0.99097298826804, -0.96984580728833, -0.93694271852081, \
				- 0.89266571997613, -0.83755273628179, -0.77227289720646, \
				- 0.69761866135637, -0.61449625220343, -0.52391467437197, \
				- 0.42697347171349, -0.324849382841911, -0.218782058284261, \
				- 0.110059013395593, 0, 0.110059013395592, 0.218782058284260, \
				0.324849382841913, 0.42697347171349, 0.52391467437197, \
				0.61449625220343, 0.69761866135637, 0.77227289720646, \
				0.83755273628179, 0.89266571997613, 0.93694271852081, \
				0.96984580728832, 0.99097298826805 };
		else if (l - m == 30)
			zeros = { -0.99260893397657, -0.97529469048374, -0.94828483841832, \
				- 0.91184993906419, -0.86635247601255, -0.81224473177764, \
				- 0.75006449393657, -0.68042975561560, -0.60403258714840, \
				- 0.52163226288157, -0.43404771720185, -0.34214940653888, \
				- 0.246850658850205, -0.149098596813647, -0.049864725046593, \
				0.049864725046593, 0.149098596813647, 0.246850658850205, \
				0.34214940653888, 0.43404771720185, 0.52163226288157, \
				0.60403258714840, 0.68042975561560, 0.75006449393656, \
				0.81224473177757, 0.86635247601232, 0.91184993906354, \
				0.94828483841682, 0.97529469048098, 0.99260893397238, \
				0.99999999999806 };
		else
			assert(false);
		break;
	case 2:
		if (l - m == 3)
			zeros = { -0.577350269189626, 0, 0.577350269189626 };
		else if (l - m == 6)
			zeros = { -0.819845995463487, -0.540604637387359, -0.188677422490786, \
				0.188677422490786, 0.540604637387359, 0.819845995463487 };
		else if (l - m == 9)
			zeros = { -0.900995639985216, -0.741453620007735, -0.527097686462098, \
				- 0.273691668336972, 0, 0.273691668336972, 0.527097686462098, \
				0.741453620007735, 0.900995639985216 };
		else if (l - m == 12)
			zeros = { -0.937559734908108, -0.835212656102633, -0.693920871864753, \
				- 0.520208773230522, -0.322181884573380, -0.109093978324516, \
				0.109093978324516, 0.322181884573380, 0.520208773230522, \
				0.693920871864753, 0.835212656102633, 0.937559734908108 };
		else if (l - m == 15)
			zeros = { -0.957072356925065, -0.886075647017153, -0.786673615781785, \
				- 0.662005274849314, -0.516066164857368, -0.353543217472561, \
				- 0.179658504848144, 0, 0.179658504848144, 0.353543217472561, \
				0.516066164857368, 0.662005274849314, 0.786673615781785, \
				0.886075647017153, 0.957072356925065 };
		else if (l - m == 18)
			zeros = { -0.968690978386525, -0.916635076644744, -0.843147446717009, \
				- 0.749910129524304, -0.639100328637038, -0.513312728308636, \
				- 0.375494621767318, -0.228875831214687, -0.0768926801937184, \
				0.0768926801937184, 0.228875831214687, 0.375494621767318, \
				0.513312728308636, 0.639100328637038, 0.749910129524304, \
				0.843147446717009, 0.916635076644744, 0.968690978386525 };
		else if (l - m == 21)
			zeros = { -0.976161695301550, -0.936392430820144, -0.879953661628218, \
				- 0.807821881120842, -0.721278091630008, -0.621864716107333, \
				- 0.511355002142538, -0.391720625104872, -0.265096262024647, \
				- 0.133741405226733, 0, 0.133741405226733, 0.265096262024647, \
				0.391720625104872, 0.511355002142538, 0.621864716107333, \
				0.721278091630008, 0.807821881120842, 0.879953661628218, \
				0.936392430820144, 0.976161695301550 };
		else if (l - m == 24)
			zeros = { -0.981246668639014, -0.949888596146790, -0.905227856388913, \
				- 0.847867343183212, -0.778607429076650, -0.698418849208460, \
				- 0.608426666148991, -0.509893886983324, -0.404203545063630, \
				- 0.292839213332639, -0.177364146857648, -0.0593993228367208, \
				0.0593993228367208, 0.177364146857648, 0.292839213332639, \
				0.404203545063630, 0.509893886983324, 0.608426666148991, \
				0.698418849208460, 0.778607429076650, 0.847867343183212, \
				0.905227856388913, 0.949888596146790, 0.981246668639014 };
		else if (l - m == 27)
			zeros = { -0.984863020213777, -0.959510625655448, -0.923312094282620, \
				- 0.876658203337831, -0.820073665942532, -0.754198386560567, \
				- 0.679778271415688, -0.597656302905614, -0.508762836986978, \
				- 0.414105004294726, -0.314755274032588, -0.211839290532498, \
				- 0.106523113000950, 0, 0.106523113000950, 0.211839290532498, \
				0.314755274032588, 0.414105004294726, 0.508762836986978, \
				0.597656302905614, 0.679778271415688, 0.754198386560567, \
				0.820073665942531, 0.876658203337831, 0.923312094282620, \
				0.959510625655448, 0.984863020213777 };
		else if (l - m == 30)
			zeros = { -0.987526170775275, -0.966609105024501, -0.936688040387166, \
				- 0.898026407700153, -0.850981980371723, -0.795992997963950, \
				- 0.733572479195234, -0.664303042259581, -0.588831340848696, \
				- 0.507861979315395, -0.422150913601463, -0.332498383383468, \
				- 0.239741435447028, -0.144746105630893, -0.0483993312234024, \
				0.0483993312234024, 0.144746105630893, 0.239741435447028, \
				0.332498383383468, 0.422150913601463, 0.507861979315395, \
				0.588831340848696, 0.664303042259581, 0.733572479195234, \
				0.795992997963950, 0.850981980371723, 0.898026407700153, \
				0.936688040387166, 0.966609105024501, 0.987526170775275 };
		else
			assert(false);
		break;
	case 3:
		if (l - m == 3)
			zeros = { -0.52223296786709,0,0.52223296786709 };
		else if (l - m == 6)
			zeros = { -0.77553552598658,-0.50091349321189,-0.173156753918109,0.173156753918109,0.50091349321189,0.77553552598658 };
		else if (l - m == 9)
			zeros = { -0.87011129909985,-0.70479780897820,-0.49585998840314,-0.255942647566751,0,0.255942647566751,0.49585998840314,0.70479780897820,0.87011129909985 };
		else if (l - m == 12)
			zeros = { -0.91544419283820,-0.80582590187638,-0.66363871287061,-0.49439821215292,-0.304961662329085,-0.103058554901379,0.103058554901379,0.304961662329085,0.49439821215292,0.66363871287061,0.80582590187638,0.91544419283820 };
		else if (l - m == 15)
			zeros = { -0.94061146332316,-0.86283910762561,-0.76053650426866,-0.63643505063905,-0.49405624787639,-0.33747914478258,-0.171200619686076,0,0.171200619686076,0.33747914478257,0.49405624787639,0.63643505063905,0.76053650426866,0.86283910762561,0.94061146332317 };
		else if (l - m == 18)
			zeros = { -0.95601359438900,-0.89805702435732,-0.82117420792821,-0.72684825625551,-0.61705406388614,-0.49411953806543,-0.36065957444204,-0.219515975023658,-0.073695389595163,0.073695389595163,0.219515975023658,0.36065957444204,0.49411953806543,0.61705406388613,0.72684825625552,0.82117420792818,0.89805702435725,0.95601359438888 };
		else if (l - m == 21)
			zeros = { -0.96611852178323,-0.92129724589694,-0.86151227456903,-0.78762610555366,-0.70082485599119,-0.60252457860521,-0.49433544085853,-0.37803196688510,-0.255522775401946,-0.128818788020057,0,0.128818788020057,0.255522775401946,0.37803196688510,0.49433544085853,0.60252457860521,0.70082485599119,0.78762610555366,0.86151227456903,0.92129724589694,0.96611852178323 };
		else if (l - m == 24)
			zeros = { -0.97310335081551,-0.93742397550412,-0.88965341601256,-0.83032016616042,-0.76017635134530,-0.68012915609493,-0.59121905621784,-0.49460363426914,-0.39154160417239,-0.283376049559418,-0.171516755537664,-0.057421749906630,0.057421749906630,0.171516755537664,0.283376049559418,0.39154160417239,0.49460363426914,0.59121905621784,0.68012915609493,0.76017635134531,0.83032016616044,0.88965341601262,0.93742397550424,0.97310335081573 };
		else if (l - m == 27)
			zeros = { -0.97813175856487,-0.94906525381909,-0.91004340974891,-0.86140341682723,-0.80364356846143,-0.73737028119310,-0.66328360493723,-0.58216767981963,-0.49488170887013,-0.40235056624472,-0.305554866127574,-0.205520505270244,-0.103307754550099,0,0.103307754550099,0.205520505270244,0.305554866127574,0.40235056624472,0.49488170887013,0.58216767981963,0.66328360493723,0.73737028119310,0.80364356846143,0.86140341682723,0.91004340974891,0.94906525381909,0.97813175856487 };
		else if (l - m == 30)
			zeros = { -0.98187152661038,-0.95774034245313,-0.92527931219726,-0.88471044689269,-0.83637596956723,-0.78069581791954,-0.71815728388832,-0.64930897663101,-0.57475541065345,-0.49515145913892,-0.41119649433488,-0.323628190243394,-0.233216012854434,-0.140754442719600,-0.047055983682351,0.047055983682351,0.140754442719600,0.233216012854434,0.323628190243394,0.41119649433488,0.49515145913892,0.57475541065345,0.64930897663101,0.71815728388832,0.78069581791954,0.83637596956723,0.88471044689270,0.92527931219727,0.95774034245316,0.98187152661046 };
		else
			assert(false);
		break;
	case 4:
		if (l - m == 3)
			zeros = { -0.480384461415261,0,0.480384461415261 };
		else if (l - m == 6)
			zeros = { -0.737365736110236,-0.468899944918031,-0.160929478583022,0.160929478583022,0.468899944918031,0.737365736110236 };
		else if (l - m == 9)
			zeros = { -0.841543233852443,-0.673079358374704,-0.469640571639374,-0.241261054373291,0,0.241261054373291,0.469640571639374,0.673079358374704,0.841543233852443 };
		else if (l - m == 12)
			zeros = { -0.894045267018885,-0.779196324691032,-0.637046536284174,-0.472128677783632,-0.290250231493091,-0.0979256427829760,0.0979256427829760,0.290250231493091,0.472128677783632,0.637046536284174,0.779196324691032,0.894045267018885 };
		else if (l - m == 15)
			zeros = { -0.924183644115604,-0.841095530460833,-0.736831325226959,-0.613664901026192,-0.474680170549418,-0.323437787527998,-0.163836684307323,0,0.163836684307323,0.323437787527998,0.474680170549418,0.613664901026192,0.736831325226959,0.841095530460833,0.924183644115604 };
		else if (l - m == 18)
			zeros = { -0.943073361675558,-0.880259033120335,-0.800763408673266,-0.705816278462856,-0.597187347694527,-0.476962608257884,-0.347469370367879,-0.211221379130413,-0.0708664667551627,0.0708664667551627,0.211221379130413,0.347469370367879,0.476962608257884,0.597187347694527,0.705816278462856,0.800763408673266,0.880259033120335,0.943073361675558 };
		else if (l - m == 21)
			zeros = { -0.955689898789036,-0.906574439563013,-0.844065578043071,-0.768865130699529,-0.682052684916109,-0.584922534772357,-0.478937466863830,-0.365699199483837,-0.246921498098980,-0.124403114015729,0,0.124403114015729,0.246921498098980,0.365699199483837,0.478937466863830,0.584922534772357,0.682052684916109,0.768865130699529,0.844065578043071,0.906574439563013,0.955689898789036 };
		else if (l - m == 24)
			zeros = { -0.964532806327679,-0.925094331568207,-0.874704678980455,-0.813779562710432,-0.743010522998295,-0.663239418118801,-0.575427001828803,-0.480635383031974,-0.380013068792914,-0.274780173523347,-0.166213214344573,-0.0556294127052536,0.0556294127052536,0.166213214344573,0.274780173523347,0.380013068792914,0.480635383031974,0.575427001828803,0.663239418118801,0.743010522998295,0.813779562710432,0.874704678980455,0.925094331568207,0.964532806327679 };
		else if (l - m == 27)
			zeros = { -0.970969942778033,-0.938614914241099,-0.897158372220956,-0.846852395525327,-0.788157836681032,-0.721644066660465,-0.647966009586059,-0.567852841547286,-0.482099063639778,-0.391555916937610,-0.297122605548175,-0.199737200044769,-0.100367226859907,0,0.100367226859907,0.199737200044769,0.297122605548175,0.391555916937610,0.482099063639778,0.567852841547286,0.647966009586059,0.721644066660465,0.788157836681032,0.846852395525327,0.897158372220956,0.938614914241099,0.970969942778033 };
		else if (l - m == 30)
			zeros = { -0.975801100278775,-0.948783972345317,-0.914093487772086,-0.871884063678203,-0.822472971831147,-0.766258070859050,-0.703700113102872,-0.635314943472785,-0.561667830039262,-0.483368208998403,-0.401064372831855,-0.315437967196374,-0.227198271897406,-0.137076282810133,-0.0458186293673510,0.0458186293673510,0.137076282810133,0.227198271897406,0.315437967196374,0.401064372831855,0.483368208998403,0.561667830039262,0.635314943472785,0.703700113102872,0.766258070859050,0.822472971831147,0.871884063678203,0.914093487772086,0.948783972345317,0.975801100278775 };
		else
			assert(false);
		break;
	case 5:
		if (l - m == 3)
			zeros = { -0.44721359549996,0,0.44721359549996 };
		else if (l - m == 6)
			zeros = { -0.70413947491029,-0.44235744639951,-0.150974182474004,0.150974182474004,0.44235744639950,0.70413947491028 };
		else if (l - m == 9)
			zeros = { -0.81521278469232,-0.64528138043632,-0.44721359549996,-0.228852330269360,0,0.228852330269359,0.44721359549996,0.64528138043632,0.81521278469232 };
		else if (l - m == 12)
			zeros = { -0.87356335449208,-0.75494779315963,-0.61344025223465,-0.45264885351855,-0.277489598732469,-0.093490589012475,0.093490589012475,0.277489598732469,0.45264885351855,0.61344025223465,0.75494779315963,0.87356335449207 };
		else if (l - m == 15)
			zeros = { -0.90803425702803,-0.82074433923836,-0.71520214616726,-0.59320800078875,-0.45744414740646,-0.311024826301754,-0.157349220922555,0,0.157349220922555,0.311024826301756,0.45744414740646,0.59320800078875,0.71520214616726,0.82074433923836,0.90803425702803 };
		else if (l - m == 18)
			zeros = { -0.93009735339739,-0.86325446362898,-0.78174836541041,-0.68652617520591,-0.57915469821219,-0.46150001984794,-0.33563850897266,-0.203803640142254,-0.068340200042202,0.068340200042202,0.203803640142254,0.33563850897266,0.46150001984794,0.57915469821219,0.68652617520589,0.78174836541041,0.86325446362895,0.93009735339733 };
		else if (l - m == 21)
			zeros = { -0.94507086881462,-0.89228198576781,-0.82754599498446,-0.75137530227945,-0.66473616856719,-0.56880624232127,-0.46491452521054,-0.35451017586473,-0.239137608890641,-0.120412870122209,0,0.120412870122209,0.239137608890641,0.35451017586473,0.46491452521054,0.56880624232127,0.66473616856719,0.75137530227945,0.82754599498446,0.89228198576781,0.94507086881462 };
		else if (l - m == 24)
			zeros = { -0.95569870962031,-0.91297220896076,-0.86036552901405,-0.79815637615226,-0.72696709747698,-0.64757352463936,-0.56086123946450,-0.46780548674421,-0.36945648491613,-0.266925990414702,-0.161373972393667,-0.053995086621532,0.053995086621532,0.161373972393667,0.266925990414702,0.36945648491613,0.46780548674421,0.56086123946450,0.64757352463937,0.72696709747700,0.79815637615232,0.86036552901427,0.91297220896141,0.95569870962190 };
		else if (l - m == 27)
			zeros = { -0.96351423609176,-0.92823369755778,-0.88466723452410,-0.83296021463616,-0.77352779527322,-0.70689972900535,-0.63368672220799,-0.55456648715818,-0.47027443476059,-0.38159555509626,-0.289356499087675,-0.194417557421705,-0.097664459357526,0,0.097664459357526,0.194417557421705,0.289356499087675,0.38159555509626,0.47027443476059,0.55456648715817,0.63368672220801,0.70689972900535,0.77352779527322,0.83296021463616,0.88466723452410,0.92823369755778,0.96351423609176 };
		else if (l - m == 30)
			zeros = { -0.96942927995340,-0.93981018302483,-0.90315382858830,-0.85952857447817,-0.80921940053355,-0.75259908572623,-0.69010130017750,-0.62221032269130,-0.54945476418246,-0.47240238670819,-0.39165517089153,-0.307844355050161,-0.221625358147074,-0.133672570209288,-0.044674024045634,0.044674024045634,0.133672570209288,0.221625358147074,0.307844355050161,0.39165517089153,0.47240238670819,0.54945476418246,0.62221032269130,0.69010130017750,0.75259908572623,0.80921940053354,0.85952857447812,0.90315382858812,0.93981018302441,0.96942927995261 };
		else
			assert(false);
		break;
	case 6:
		if (l - m == 3)
			zeros = { -0.420084025208403,0,0.420084025208403 };
		else if (l - m == 6)
			zeros = { -0.674923166958403,-0.419880369652366,-0.142664315534439,0.142664315534439,0.419880369652366,0.674923166958403 };
		else if (l - m == 9)
			zeros = { -0.790947333196580,-0.620658615764098,-0.427738714055961,-0.218183641984436,0,0.218183641984436,0.427738714055962,0.620658615764098,0.790947333196580 };
		else if (l - m == 12)
			zeros = { -0.854070380685629,-0.732764126609152,-0.592294046693071,-0.435415666540996,-0.266282014242857,-0.0896083354264016,0.0896083354264016,0.266282014242857,0.435415666540996,0.592294046693071,0.732764126609152,0.854070380685629 };
		else if (l - m == 15)
			zeros = { -0.892301884261998,-0.801677172446709,-0.695363101640410,-0.574691220294313,-0.441976726297725,-0.299946397651144,-0.151576905949901,0,0.151576905949901,0.299946397651144,0.441976726297725,0.574691220294313,0.695363101640410,0.801677172446709,0.892301884261998 };
		else if (l - m == 18)
			zeros = { -0.917231267461931,-0.847030429482510,-0.763984740210911,-0.668746245256319,-0.562684836763228,-0.447466433362261,-0.324946885267666,-0.197118043465928,-0.0660662003090013,0.0660662003090013,0.197118043465928,0.324946885267666,0.447466433362261,0.562684836763228,0.668746245256319,0.763984740210911,0.847030429482510,0.917231267461931 };
		else if (l - m == 21)
			zeros = { -0.934395299385003,-0.878449317754725,-0.811888203862769,-0.735019075367761,-0.648691936241454,-0.553973338822785,-0.452070448283707,-0.344296909217677,-0.232048870778391,-0.116783801239384,0,0.116783801239384,0.232048870778391,0.344296909217677,0.452070448283707,0.553973338822785,0.648691936241454,0.735019075367761,0.811888203862769,0.878449317754725,0.934395299385003 };
		else if (l - m == 24)
			zeros = { -0.946718397312365,-0.901104252602590,-0.846614105727047,-0.783372196355619,-0.711926246261386,-0.632986338797072,-0.547367219605450,-0.455964810544078,-0.359741206985705,-0.259712106969138,-0.156934898635669,-0.0524968389086562,0.0524968389086562,0.156934898635669,0.259712106969138,0.359741206985705,0.455964810544078,0.547367219605450,0.632986338797072,0.711926246261386,0.783372196355619,0.846614105727047,0.901104252602590,0.946718397312365 };
		else if (l - m == 27)
			zeros = { -0.955865695283864,-0.917973548505247,-0.872571771374573,-0.819684995369256,-0.759676908544241,-0.693036020062687,-0.620329932589969,-0.542188105081409,-0.459291788124017,-0.372366091399086,-0.282172680276487,-0.189502595898664,-0.0951690282795604,0,0.0951690282795604,0.189502595898664,0.282172680276487,0.372366091399086,0.459291788124017,0.542188105081409,0.620329932589969,0.693036020062687,0.759676908544241,0.819684995369256,0.872571771374573,0.917973548505247,0.955865695283864 };
		else if (l - m == 30)
			zeros = { -0.962842648803308,-0.930870626645751,-0.892474652712571,-0.847624565794578,-0.796567642321970,-0.739649372122335,-0.677276094969684,-0.609901711059090,-0.538020519993064,-0.462161932804983,-0.382885775885184,-0.300777743779407,-0.216444839269231,-0.130510746748939,-0.0436111304179192,0.0436111304179192,0.130510746748939,0.216444839269231,0.300777743779407,0.382885775885184,0.462161932804983,0.538020519993064,0.609901711059090,0.677276094969684,0.739649372122335,0.796567642321970,0.847624565794578,0.892474652712571,0.930870626645751,0.962842648803308 };
		else
			assert(false);
		break;
	case 7:
		if (l - m == 3)
			zeros = { -0.39735970711951,0,0.39735970711951 };
		else if (l - m == 6)
			zeros = { -0.64899604392386,-0.40052356313905,-0.135591335790966,0.135591335790966,0.40052356313905,0.64899604392386 };
		else if (l - m == 9)
			zeros = { -0.76855076832811,-0.59865017608975,-0.41061680929801,-0.208882363239557,0,0.208882363239557,0.41061680929800,0.59865017608976,0.76855076832811 };
		else if (l - m == 12)
			zeros = { -0.83557181068584,-0.71238011812955,-0.57320494138025,-0.42002472124468,-0.256335084337969,-0.086172811969587,0.086172811969587,0.256335084337969,0.42002472124468,0.57320494138025,0.71238011812955,0.83557181068583 };
		else if (l - m == 15)
			zeros = { -0.87706173814188,-0.78378726651948,-0.67708089448283,-0.55782217798481,-0.42799188264053,-0.289978250666789,-0.146397185951078,0,0.146397185951078,0.289978250666791,0.42799188264053,0.55782217798481,0.67708089448284,0.78378726651948,0.87706173814188 };
		else if (l - m == 18)
			zeros = { -0.90456902936321,-0.83155947939682,-0.74734690856077,-0.65228690343158,-0.54756076517473,-0.43465202537563,-0.315221579983770,-0.191051316853971,-0.064005092993972,0.064005092993972,0.191051316853971,0.315221579983770,0.43465202537563,0.54756076517473,0.65228690343156,0.74734690856078,0.83155947939685,0.90456902936330 };
		else if (l - m == 21)
			zeros = { -0.92375640582443,-0.86508749692487,-0.79703020978892,-0.71967933316542,-0.63376850637889,-0.54025899308452,-0.44024671923634,-0.33492431590305,-0.225557282677106,-0.113464476406527,0,0.113464476406528,0.225557282677107,0.33492431590305,0.44024671923634,0.54025899308452,0.63376850637890,0.71967933316542,0.79703020978892,0.86508749692487,0.92375640582443 };
		else if (l - m == 24)
			zeros = { -0.93767748614440,-0.88951932803629,-0.83342521938858,-0.76935743613344,-0.69778610992690,-0.61935663127652,-0.53481705968231,-0.44499066058824,-0.35076015312766,-0.253055619512922,-0.152843634270535,-0.051116775516843,0.051116775516843,0.152843634270535,0.253055619512922,0.35076015312766,0.44499066058824,0.53481705968231,0.61935663127652,0.69778610992690,0.76935743613344,0.83342521938855,0.88951932803616,0.93767748614398 };
		else if (l - m == 27)
			zeros = { -0.94810048435909,-0.90787060261147,-0.86086783952411,-0.80698759932817,-0.74653833384522,-0.67996648642813,-0.60779785075821,-0.53061660507654,-0.44905420596497,-0.36378142103361,-0.275501442303142,-0.184943355991824,-0.092855698097137,0,0.092855698097137,0.184943355991824,0.275501442303142,0.36378142103361,0.44905420596497,0.53061660507654,0.60779785075821,0.67996648642813,0.74653833384522,0.80698759932817,0.86086783952411,0.90787060261147,0.94810048435909 };
		else if (l - m == 30)
			zeros = { -0.95610805263782,-0.92200335892488,-0.88206364778448,-0.83615224858738,-0.78447493292720,-0.72734839180367,-0.66515165617994,-0.59830943561761,-0.52728386273677,-0.45256895280469,-0.37468602603653,-0.294179466645283,-0.211612575770336,-0.127563423323116,-0.042620666722070,0.042620666722070,0.127563423323116,0.211612575770336,0.294179466645284,0.37468602603653,0.45256895280469,0.52728386273677,0.59830943561760,0.66515165617989,0.72734839180347,0.78447493292664,0.83615224858518,0.88206364777720,0.92200335890421,0.95610805258772 };
		else
			assert(false);
		break;
	case 8:
		if (l - m == 3)
			zeros = { -0.377964473009227,0,0.377964473009227 };
		else if (l - m == 6)
			zeros = { -0.625798639432081,-0.383624290623842,-0.129475951758874,0.129475951758874,0.383624290623842,0.625798639432081 };
		else if (l - m == 9)
			zeros = { -0.747831718278373,-0.578824643382568,-0.395407139499443,-0.200678943319470,0,0.200678943319470,0.395407139499443,0.578824643382568,0.747831718278373 };
		else if (l - m == 12)
			zeros = { -0.818038753017182,-0.693572986494715,-0.555857610533686,-0.406167462626166,-0.247428308283261,-0.0831044201608776,0.0831044201608776,0.247428308283261,0.406167462626166,0.555857610533686,0.693572986494715,0.818038753017182 };
		else if (l - m == 15)
			zeros = { -0.862350349448662,-0.766973926420394,-0.660162740772470,-0.542367599596703,-0.415265037412679,-0.280945793420708,-0.141715054936778,0,0.141715054936778,0.280945793420708,0.415265037412679,0.542367599596703,0.660162740772470,0.766973926420394,0.862350349448662 };
		else if (l - m == 18)
			zeros = { -0.892170526851588,-0.816806609808335,-0.731725177222017,-0.636990931916479,-0.533606215943232,-0.422888201961319,-0.306324525589513,-0.185513342346371,-0.0621256038108359,0.0621256038108359,0.185513342346371,0.306324525589513,0.422888201961319,0.533606215943232,0.636990931916479,0.731725177222017,0.816806609808335,0.892170526851588 };
		else if (l - m == 21)
			zeros = { -0.913219439346495,-0.852195794831161,-0.782913984925951,-0.705255401326115,-0.619839174912748,-0.527527169554694,-0.429313526104683,-0.326282305728716,-0.219583212931822,-0.110413173085502,0,0.110413173085502,0.219583212931822,0.326282305728716,0.429313526104683,0.527527169554694,0.619839174912748,0.705255401326115,0.782913984925951,0.852195794831161,0.913219439346495 };
		else if (l - m == 24)
			zeros = { -0.928639086529928,-0.878234011137010,-0.820772084634556,-0.756050013796314,-0.684459214144900,-0.606582010395184,-0.523103740776949,-0.434780948211084,-0.342424559153946,-0.246887974902062,-0.149056948663279,-0.0498401325617411,0.0498401325617411,0.149056948663279,0.246887974902062,0.342424559153946,0.434780948211084,0.523103740776949,0.606582010395184,0.684459214144900,0.756050013796314,0.820772084634556,0.878234011137010,0.928639086529928 };
		else if (l - m == 27)
			zeros = { -0.940276704172443,-0.897949597620165,-0.849547305757514,-0.794831505755874,-0.734053202883095,-0.667616591094331,-0.596007086942147,-0.519766353852477,-0.439479947179396,-0.355769139035021,-0.269284288873009,-0.180698807032774,-0.0907033361700663,0,0.0907033361700663,0.180698807032774,0.269284288873009,0.355769139035021,0.439479947179396,0.519766353852477,0.596007086942147,0.667616591094331,0.734053202883095,0.794831505755874,0.849547305757514,0.897949597620165,0.940276704172443 };
		else if (l - m == 30)
			zeros = { -0.949277772754377,-0.913236351166562,-0.871923668094225,-0.825091838521377,-0.772902611296787,-0.715642949964903,-0.653664824881393,-0.587364941853746,-0.517175238804455,-0.443556979058916,-0.366996195846716,-0.287999668635378,-0.207091102082879,-0.124807369346234,-0.0416947632883078,0.0416947632883078,0.124807369346234,0.207091102082879,0.287999668635378,0.366996195846716,0.443556979058916,0.517175238804455,0.587364941853746,0.653664824881393,0.715642949964903,0.772902611296787,0.825091838521377,0.871923668094225,0.913236351166562,0.949277772754377 };
		else
			assert(false);
		break;
	case 9:
		if (l - m == 3)
			zeros = { -0.36115755925731,0,0.36115755925731 };
		else if (l - m == 6)
			zeros = { -0.60489214242738,-0.36870195215137,-0.124119884868320,0.124119884868319,0.36870195215137,0.60489214242738 };
		else if (l - m == 9)
			zeros = { -0.72861421419496,-0.56084400508179,-0.38177701019454,-0.193372883040028,0,0.193372883040028,0.38177701019454,0.56084400508179,0.72861421419496 };
		else if (l - m == 12)
			zeros = { -0.80142527051971,-0.67615491048815,-0.54000100872001,-0.39360360941478,-0.239391783957267,-0.080342102081822,0.080342102081822,0.239391783957267,0.39360360941478,0.54000100872001,0.67615491048815,0.80142527051971 };
		else if (l - m == 15)
			zeros = { -0.84818028719128,-0.75114436675543,-0.64444766720299,-0.52813853249656,-0.40361690783538,-0.272710740007161,-0.137455566007176,0,0.137455566007176,0.272710740007163,0.40361690783537,0.52813853249656,0.64444766720299,0.75114436675543,0.84818028719128 };
		else if (l - m == 18)
			zeros = { -0.88007277581484,-0.80273346341426,-0.71702348374308,-0.62272650048457,-0.52067612543259,-0.41203761925782,-0.298143918553511,-0.180431395601102,-0.060402534729598,0.060402534729598,0.180431395601102,0.298143918553511,0.41203761925782,0.52067612543259,0.62272650048456,0.71702348374306,0.80273346341427,0.88007277581482 };
		else if (l - m == 21)
			zeros = { -0.90282995402602,-0.83976598607754,-0.76948572777892,-0.69166008595203,-0.60679685323607,-0.51566432368671,-0.41916332101191,-0.318280094880612,-0.214061184853639,-0.107595639892634,0,0.107595639892635,0.214061184853641,0.318280094880610,0.41916332101191,0.51566432368671,0.60679685323608,0.69166008595203,0.76948572777892,0.83976598607754,0.90282995402602 };
		else if (l - m == 24)
			zeros = { -0.91964994268140,-0.86725633544613,-0.80862748891701,-0.74339434482610,-0.67186981308009,-0.59457517531318,-0.51213682101223,-0.42524988005169,-0.33466010495524,-0.241151914796619,-0.145538787583988,-0.048654605734712,0.048654605734712,0.145538787583988,0.241151914796619,0.33466010495524,0.42524988005169,0.51213682101223,0.59457517531318,0.67186981308009,0.74339434482609,0.80862748891696,0.86725633544604,0.91964994268154 };
		else if (l - m == 27)
			zeros = { -0.93243901223632,-0.88822697584198,-0.83859943939426,-0.78318271733443,-0.72216933874315,-0.65592155437039,-0.58488592755496,-0.50956418630231,-0.43049947397581,-0.34826783328477,-0.263471706453558,-0.176734265755435,-0.088694092720512,0,0.088694092720512,0.176734265755435,0.263471706453558,0.34826783328477,0.43049947397581,0.50956418630231,0.58488592755495,0.65592155437040,0.72216933874315,0.78318271733443,0.83859943939426,0.88822697584198,0.93243901223632 };
		else if (l - m == 30)
			zeros = { -0.94239305935008,-0.90459001314375,-0.86205408068278,-0.81442386466212,-0.76181557421648,-0.70448598293510,-0.64276042947657,-0.57700879481416,-0.50763464383870,-0.43506886512869,-0.35976506031781,-0.282195664491542,-0.202848379028064,-0.122222733870987,-0.040826697803292,0.040826697803292,0.122222733870987,0.202848379028064,0.282195664491542,0.35976506031781,0.43506886512869,0.50763464383870,0.57700879481416,0.64276042947657,0.70448598293511,0.76181557421653,0.81442386466235,0.86205408068373,0.90459001314707,0.94239305935996 };
		else
			assert(false);
		break;
	case 10:
		if (l - m == 3)
			zeros = { -0.346410161513775, 0, 0.346410161513775 };
		else if (l - m == 6)
			zeros = { -0.585928278751918, -0.355398259780526, -0.119377957955916, \
				0.119377957955916, 0.355398259780526, 0.585928278751918 };
		else if (l - m == 9)
			zeros = { -0.710740797580201, -0.544439175602461, -0.369469800172301, \
				- 0.186811515860196, 0, 0.186811515860196, 0.369469800172301, \
				0.544439175602461, 0.710740797580201 };
		else if (l - m == 12)
			zeros = { -0.785677935369453, -0.659966790762808, -0.525432295945573, \
				- 0.382142764652711, -0.232092164335032, -0.0778381330023554, \
				0.0778381330023554, 0.232092164335032, 0.382142764652711, \
				0.525432295945573, 0.659966790762808, 0.785677935369453 };
		else if (l - m == 15)
			zeros = { -0.834549228290157, -0.736214184334572, -0.629800040363087, \
				- 0.514979926812994, -0.392902306489701, -0.265161914433631, \
				- 0.133558691328300, 0, 0.133558691328300, 0.265161914433631, \
				0.392902306489701, 0.514979926812994, 0.629800040363087, \
				0.736214184334572, 0.834549228290157 };
		else if (l - m == 18)
			zeros = { -0.868297199880315, -0.789300831941116, -0.703157451847044, \
			- 0.609382014903262, -0.508649754332981, -0.401987037904412, \
			- 0.290588096522534, -0.175746048086462, -0.0588153256804685, \
			0.0588153256804685, 0.175746048086462, 0.290588096522534, \
			0.401987037904412, 0.508649754332981, 0.609382014903262, \
			0.703157451847044, 0.789300831941116, 0.868297199880315 };
		else if (l - m == 21)
			zeros = { -0.892619392606114, -0.827785177143118, -0.756695864296144, \
				- 0.678817390016501, -0.594550218822978, -0.504574745643820, \
				- 0.409706084194920, -0.310842034374351, -0.208936789796884, \
				- 0.104983459167023, 0, 0.104983459167023, 0.208936789796884, \
				0.310842034374351, 0.409706084194920, 0.504574745643820, \
				0.594550218822978, 0.678817390016501, 0.756695864296144, \
				0.827785177143118, 0.892619392606114 };
		else if (l - m == 24)
			zeros = { -0.910744683585503, -0.856588384065858, -0.796964551048148, \
				- 0.731340520061326, -0.659951857778089, -0.583261081373595, \
				- 0.501839205272628, -0.416324716753512, -0.327404004838450, \
				- 0.235799182152118, -0.142258809003067, -0.0475498473460057, \
				0.0475498473460057, 0.142258809003067, 0.235799182152118, \
				0.327404004838450, 0.416324716753512, 0.501839205272628, \
				0.583261081373595, 0.659951857778089, 0.731340520061326, \
				0.796964551048148, 0.856588384065858, 0.910744683585503 };
		else if (l - m == 27)
			zeros = { -0.924621875988262, -0.878713096862447, -0.828011901871299, \
				- 0.772009653173522, -0.710840256725616, -0.644824691314218, \
				- 0.574372243231453, -0.499947112542850, -0.422053171994014, \
				- 0.341225009652238, -0.258021457246379, -0.173020184788575, \
				- 0.0868127726998832, 0, 0.0868127726998832, 0.173020184788575, \
				0.258021457246379, 0.341225009652238, 0.422053171994014, \
				0.499947112542850, 0.574372243231453, 0.644824691314218, \
				0.710840256725616, 0.772009653173522, 0.828011901871299, \
				0.878713096862447, 0.924621875988262 };
		else if (l - m == 30)
			zeros = { -0.935486648675890, -0.896079031452777, -0.852451761957665, \
				- 0.804129393167184, -0.751181848412664, -0.693835614658946, \
				- 0.632389966178929, -0.567189121856510, -0.498609960902022, \
				- 0.427055143826384, -0.352948385164103, -0.276730657973667, \
				- 0.198856820721338, -0.119792438054503, -0.0400106888158520, \
				0.0400106888158520, 0.119792438054503, 0.198856820721338, \
				0.276730657973667, 0.352948385164103, 0.427055143826384, \
				0.498609960902022, 0.567189121856510, 0.632389966178929, \
				0.693835614658946, 0.751181848412664, 0.804129393167184, \
				0.852451761957665, 0.896079031452777, 0.935486648675890 };
		else
			assert(false);
		break;
	default:
		assert(false);
	}
}
*/